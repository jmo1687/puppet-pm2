#!/bin/bash
#
# install a nodejs app and run in pm2 
#
set -e
set -v
export PATH=/usr/local/node/node-default/bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/sbin
echo "Installing app $1 $2 script $3 env $4 args $5"
name=$1
app=$1
if [[ "$2" != "" ]]; then
    appversion="$2"
else
    appversion="latest"
fi
if [[ "$3" != "" ]]; then
    appscript="$3"
else
    appscript="lib/app.js"
fi

if [[ "$4" != "" ]]; then
    appenv="$4"
else
    appenv= "{}"
fi
if [[ "$5" != "" ]]; then
    appargs="$5"
else
    appargs="[]"
fi
install_root='<%= @install_root %>'
install_dir='<%= @install_dir %>'
deamon_user='<%= @deamon_user %>'
install_path="$install_root/$install_dir"
apppath="$install_root/$install_dir/$name"

mkdir -p "$apppath/$appversion"
chown -Rf $deamon_user:$deamon_user "$apppath"
cd "$apppath/$appversion"
npm install $app@$appversion
chown -Rf $deamon_user:$deamon_user "$apppath/$appversion"

if [  -f "$apppath/pm2.json" ]; then
  chmod 0744 "$apppath/pm2.json"
fi
cat <<EOF > "$apppath/pm2.json"
{
  "name":   "$name",
  "script":    "$apppath/current/node_modules/$name/$appscript",
  "args":   $appargs,
  "max_restarts": "<%= @max_restarts %>",
  "min_uptime": "<%= @min_uptime %>",
  "env":    $appenv,
  "error_file" : "/var/log/pm2/$name/error.log",
  "out_file"   : "/var/log/pm2/$name/out.log",
  "pid_file"   : "/var/run/pm2/$name.pid"
 }
EOF
chown -Rf $deamon_user:$deamon_user "$apppath/pm2.json"
chmod 0444 "$apppath/pm2.json"

mkdir -p "/var/log/pm2/$name"
chown -Rf $deamon_user:$deamon_user "/var/log/pm2/$name"
mkdir -p "/var/log/pm2/$name"
chown -Rf $deamon_user:$deamon_user "/var/log/pm2/$name"
chmod 755 "/var/log/pm2/$name"
# ln -s "$ACTUAL_DIR" "$SYMLINK"
if [ ! -L "$apppath/logs" ]; then
  ln -s "/var/log/pm2/$name" "$apppath/logs"
fi
chown -Rf $deamon_user:$deamon_user "$apppath/logs"
chmod 755 "$apppath/logs"
if [ ! -L "$apppath/pids" ]; then
  ln -s "/var/run/pm2" "$apppath/pids"
fi
chown -Rf $deamon_user:$deamon_user "$apppath/pids"

# HACK: `pm2 reload` does NOT reload changes to the pm2.json file
#       the only way to process changes in the pm2.json file is to delete and
#       then start the app
# BUG: bug in PM2 means have to set HOME variable for user


if   pm2 -m list | grep -q "\-\-\- $name" ; then
  cd "$apppath/current"
  env HOME=$install_root/$install_dir pm2 delete $name
fi

cd "$apppath"
if [  -L "$apppath/current" ]; then
  rm "$apppath/current"
fi
ln -s "$apppath/$appversion" "$apppath/current"
chown -Rf $deamon_user:$deamon_user "$apppath/current"

# now tell pm2 to startup using a cluster with as many nodes as CPUs
# BUG: bug in PM2 means have to set HOME variable for user

cd "$apppath"
env HOME=$install_root/$install_dir pm2 start "$apppath/pm2.json" --name "$name"




